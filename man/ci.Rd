% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci.R
\name{ci}
\alias{ci}
\alias{use_ci}
\alias{use_travis}
\alias{use_appveyor}
\title{Continuous integration setup and badges}
\usage{
use_ci(path = ".", quiet = FALSE, services = c("travis", "appveyor"))

use_travis(browse = interactive())

use_appveyor(browse = interactive())
}
\arguments{
\item{path}{\code{[string]}\cr
The path to the repo to prepare.}

\item{quiet}{\code{[flag]}\cr
Less verbose output? Default: \code{FALSE}.}

\item{services}{\code{[character]}\cr
CI services to add.}

\item{browse}{Open a browser window to enable automatic builds for the
package.}
}
\description{
Sets up continuous integration (CI) services for an R package that is
developed on GitHub with CI-agnostic support by \pkg{tic}.
CI services can run \code{R CMD check} automatically on
various platforms, triggered by each push or pull request. This function
\itemize{
\item Adds service-specific configuration files and adds them to \code{.Rbuildignore}.
\item Activates a service or gives the user a detailed prompt.\cr
}
}
\details{
The following steps will be run (\code{use_ci()} only):
\enumerate{
\item If necessary, create a GitHub repository via \code{\link[=use_github]{use_github()}}
\item Enable Travis via \code{\link[=travis_enable]{travis_enable()}}
\item Create a default \code{.travis.yml} file
(overwrite after confirmation in interactive mode only)
\item Create a default \code{appveyor.yml} file
(depending on repo type, overwrite after confirmation
in interactive mode only)
\item Create a default \code{tic.R} file depending on the repo type
(package, website, bookdown, ...)
\item Enable deployment (if necessary, depending on repo type)
via \code{\link[=use_travis_deploy]{use_travis_deploy()}}
\item Create a GitHub PAT and install it on Travis CI via \code{\link[=travis_set_pat]{travis_set_pat()}}
}
}
\section{\code{use_ci()}}{

By default the CI-services "Travis" (Linux) and "Appveyor"
(Windows) will be set up. Basic \code{.travis.yml} and \code{appveyor.yml} files are
added to the top-level directory of a package.

This function is aimed at supporting the most common use cases.
Users who require more control are advised to manually call the individual
functions.
}

\section{\code{use_travis()}}{

Adds a basic \code{.travis.yml} to the top-level directory of a package. This is a
configuration file for the \href{https://travis-ci.org/}{Travis CI} continuous
integration service.
}

\section{\code{use_appveyor()}}{

Adds a basic \code{appveyor.yml} to the top-level directory of a package. This is
a configuration file for the \href{https://www.appveyor.com}{AppVeyor} continuous
integration service for Windows.
}

